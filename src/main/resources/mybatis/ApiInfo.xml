<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ApiInfo">
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="org.allen.imocker.entity.ApiInfo">
        insert into api_info(
            api_name,
            method,
            content_type,
            has_condition,
            ret_result,
            uri_variable,
            description,
            qa_url,
            prd_url,
            status,
            created_at,
            created_by,
            updated_at,
            updated_by
        ) values (
            #{apiName},
            #{method},
            #{contentType},
            #{hasCondition},
            #{retResult},
            #{uriVariable},
            #{description},
            #{qaUrl},
            #{prdUrl},
            #{status},
            now(),
            #{createdBy},
            now(),
            #{updatedBy}
        )
    </insert>

    <sql id="all_columns">
        id id,
        api_name apiName,
        method method,
        content_type contentType,
        has_condition hasCondition,
        ret_result retResult,
        uri_variable uriVariable,
        description description,
        qa_url qaUrl,
        prd_url prdUrl,
        status status,
        created_at createdAt,
        created_by createdBy,
        updated_at updatedAt,
        updated_by updatedBy
    </sql>

    <select id="findApiInfoByName" parameterType="string" resultType="org.allen.imocker.entity.ApiInfo">
        select
        <include refid="all_columns"/>
        from api_info
        where api_name = #{apiName} and status = 1
    </select>

    <select id="findByCondition" parameterType="map" resultType="org.allen.imocker.entity.ApiInfo">
        select
        <include refid="all_columns"/>
        from api_info
        <where>
            1=1
            <if test="apiName != null and apiName !=''">
                and api_name like concat('%', #{apiName}, '%')
            </if>
            <if test="method != null and method !=''">
                and method = #{method}
            </if>
            <if test="status != null and status !=''">
                and status = #{status}
            </if>
            <if test="operator != null and operator !=''">
                and updated_by = #{operator}
            </if>
        </where>
        order by updated_at desc limit #{start}, #{pageSize}
    </select>

    <select id="countByCondition" parameterType="map" resultType="java.lang.Long">
        select count(id) from api_info
        <where>
            1=1
            <if test="apiName != null and apiName !=''">
                and api_name like concat('%', #{apiName}, '%')
            </if>
            <if test="method != null and method !=''">
                and method = #{method}
            </if>
            <if test="status != null and status !=''">
                and status = #{status}
            </if>
            <if test="operator != null and operator !=''">
                and updated_by = #{operator}
            </if>
        </where>
    </select>

    <select id="getById" resultType="org.allen.imocker.entity.ApiInfo">
        select
        <include refid="all_columns"/>
        from api_info where id = #{id}
    </select>

    <update id="update" parameterType="org.allen.imocker.entity.ApiInfo">
        update api_info set api_name = #{apiName}, method = #{method}, content_type = #{contentType}, has_condition=#{hasCondition}, ret_result = #{retResult}, uri_variable = #{uriVariable}, status = #{status}, updated_by = #{updatedBy}, updated_at = now()
        where id = #{id}
    </update>

    <select id="findUriVariableApi" resultType="org.allen.imocker.entity.ApiInfo">
        select
        <include refid="all_columns"/>
        from api_info where status = 1 and uri_variable is not null and uri_variable != ''
    </select>

    <delete id="deleteById">
        delete from api_info where id = #{id}
    </delete>
</mapper>