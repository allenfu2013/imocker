<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
        PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
        "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="ApiInfo">
    <insert id="insert" parameterClass="org.allen.imocker.entity.ApiInfo">
        insert into api_info(
            api_name,
            method,
            ret_result,
            regex,
            status,
            created_at,
            created_by,
            updated_at,
            updated_by
        ) values (
            #apiName#,
            #method#,
            #retResult#,
            #regex#,
            #status#,
            now(),
            #createdBy#,
            now(),
            #updatedBy#
        )
    </insert>

    <sql id="all_columns">
        id id,
        api_name apiName,
        method method,
        ret_result retResult,
        regex regex,
        status status,
        created_at createdAt,
        created_by createdBy,
        updated_at updatedAt,
        updated_by updatedBy
    </sql>

    <select id="findApiInfoByName" parameterClass="string" resultClass="org.allen.imocker.entity.ApiInfo">
        select
        <include refid="all_columns"/>
        from api_info
        where api_name = #apiName# and status = 1
    </select>

    <select id="findByCondition" parameterClass="map" resultClass="org.allen.imocker.entity.ApiInfo">
        select
        <include refid="all_columns"/>
        from api_info
        <dynamic prepend="where">
            <isNotEmpty prepend="and" property="apiName">
                api_name like concat('%', #apiName#, '%')
            </isNotEmpty>
            <isNotEmpty prepend="and" property="status">
                status = #status#
            </isNotEmpty>
        </dynamic>
        order by updated_at desc limit #start#, #pageSize#
    </select>

    <select id="countByCondition" parameterClass="map" resultClass="java.lang.Long">
        select count(id) from api_info
        <dynamic prepend="where">
            <isNotEmpty prepend="and" property="apiName">
                api_name like concat('%', #apiName#, '%')
            </isNotEmpty>
            <isNotEmpty prepend="and" property="status">
                status = #status#
            </isNotEmpty>
        </dynamic>
    </select>

    <select id="getById" resultClass="org.allen.imocker.entity.ApiInfo">
        select
        <include refid="all_columns"/>
        from api_info where id = #id#
    </select>

    <update id="update" parameterClass="org.allen.imocker.entity.ApiInfo">
        update api_info set api_name = #apiName#, method = #method#, ret_result = #retResult#, regex = #regex#, status = #status#, updated_by = #updatedBy#, updated_at = now()
        where id = #id#
    </update>

    <select id="findRegexApi" resultClass="org.allen.imocker.entity.ApiInfo">
        select
        <include refid="all_columns"/>
        from api_info where status = 1 and regex is not null
    </select>
</sqlMap>